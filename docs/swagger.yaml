basePath: /
definitions:
  dto.CreateUserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.LoginDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: reinaldo.saraiva@gmail.com
    name: Reinaldo Saraiva
  description: API Go with authentication JWT and CRUD
  termsOfService: http://swagger.io/terms
  title: API Go
  version: "1.0"
paths:
  /users:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: user request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create user
      tags:
      - users
  /users/generate_token:
    post:
      consumes:
      - application/json
      description: Get a user by JWT user
      parameters:
      - description: user request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get a user by JWT user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
