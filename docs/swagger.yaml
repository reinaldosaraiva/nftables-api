basePath: /
definitions:
  dto.CreateChainDTO:
    properties:
      description:
        type: string
      name:
        type: string
      project_id:
        type: integer
      state:
        type: string
      table_id:
        type: integer
      type:
        type: string
    type: object
  dto.CreateProjectDTO:
    properties:
      name:
        type: string
      tenant_id:
        type: integer
    type: object
  dto.CreateTableDTO:
    properties:
      description:
        type: string
      name:
        type: string
      state:
        type: string
      type:
        type: string
    type: object
  dto.CreateTenantDTO:
    properties:
      name:
        type: string
    type: object
  dto.CreateUserDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.LoginDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: reinaldo.saraiva@gmail.com
    name: Reinaldo Saraiva
  description: This is a Go API that provides a Restful interface for managing nftables,
    a powerful and flexible firewall framework in the Linux kernel.
  termsOfService: http://swagger.io/terms
  title: NFTABLES API Go
  version: "0.1"
paths:
  /chains:
    get:
      consumes:
      - application/json
      description: Get all chains
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateChainDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all chains
      tags:
      - Chains
    post:
      consumes:
      - application/json
      description: Create Chains
      parameters:
      - description: chain request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateChainDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a new Chain
      tags:
      - Chains
  /chains/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a chain by ID
      parameters:
      - description: Chain ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a chain by ID
      tags:
      - Chains
    get:
      consumes:
      - application/json
      description: Get a chain by ID
      parameters:
      - description: Chain ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateChainDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get a chain by ID
      tags:
      - Chains
    put:
      consumes:
      - application/json
      description: Update a chain by ID
      parameters:
      - description: Chain ID
        in: path
        name: id
        required: true
        type: integer
      - description: chain request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateChainDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a chain by ID
      tags:
      - Chains
  /chains/filter:
    get:
      consumes:
      - application/json
      description: Get chains filtered by ID or name
      parameters:
      - description: Chain ID
        in: query
        name: id
        type: integer
      - description: Chain Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateChainDTO'
            type: array
        "400":
          description: Invalid parameter format
        "404":
          description: Chain not found
      security:
      - ApiKeyAuth: []
      summary: Get chains with optional filters
      tags:
      - Chains
  /projects:
    get:
      consumes:
      - application/json
      description: Get all Projects
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateProjectDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all Projects
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: Create Projects
      parameters:
      - description: project request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProjectDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a new Project
      tags:
      - Projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Project by ID
      parameters:
      - description: project id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Project by ID
      tags:
      - Projects
    get:
      consumes:
      - application/json
      description: Get a project by ID
      parameters:
      - description: project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateProjectDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get a project by ID
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Update a project by ID
      parameters:
      - description: project id
        in: path
        name: id
        required: true
        type: integer
      - description: project request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProjectDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a project by ID
      tags:
      - Projects
  /projects/filter:
    get:
      consumes:
      - application/json
      description: Get projects filtered by ID or name
      parameters:
      - description: Project ID
        in: query
        name: id
        type: integer
      - description: Project Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateProjectDTO'
            type: array
        "400":
          description: Invalid parameter format
        "404":
          description: Project not found
      security:
      - ApiKeyAuth: []
      summary: Get projects with optional filters
      tags:
      - Projects
  /tables:
    get:
      consumes:
      - application/json
      description: Get all tables
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateTableDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all tables
      tags:
      - Tables
    post:
      consumes:
      - application/json
      description: Create Tables
      parameters:
      - description: table request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTableDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a new Table
      tags:
      - Tables
  /tables/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a table by ID
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a table by ID
      tags:
      - Tables
    get:
      consumes:
      - application/json
      description: Get a table by ID
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateTableDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get a table by ID
      tags:
      - Tables
    put:
      consumes:
      - application/json
      description: Update a table by ID
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: integer
      - description: table request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTableDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a table by ID
      tags:
      - Tables
  /tables/filter:
    get:
      consumes:
      - application/json
      description: Get tables filtered by ID or name
      parameters:
      - description: Table ID
        in: query
        name: id
        type: integer
      - description: Table Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateTableDTO'
            type: array
        "400":
          description: Invalid parameter format
        "404":
          description: Table not found
      security:
      - ApiKeyAuth: []
      summary: Get tables with optional filters
      tags:
      - Tables
  /tenants:
    get:
      consumes:
      - application/json
      description: Get all Tenants
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateTenantDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all Tenants
      tags:
      - Tenants
    post:
      consumes:
      - application/json
      description: Create Tenants
      parameters:
      - description: tenant request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTenantDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a new Tenant
      tags:
      - Tenants
  /tenants/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Tenant a tenant by ID
      parameters:
      - description: tenant id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Tenant a tenant by ID
      tags:
      - Tenants
    get:
      consumes:
      - application/json
      description: Get a tenant by ID
      parameters:
      - description: tenant ID
        in: path
        name: ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateTenantDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get a tenant by ID
      tags:
      - Tenants
    put:
      consumes:
      - application/json
      description: Update a tenant by ID
      parameters:
      - description: tenant id
        in: path
        name: id
        required: true
        type: integer
      - description: tenant request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTenantDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a tenant by ID
      tags:
      - Tenants
  /tenants/filter:
    get:
      consumes:
      - application/json
      description: Get tenants filtered by ID or name
      parameters:
      - description: Tenant ID
        in: query
        name: id
        type: integer
      - description: Tenant Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CreateTenantDTO'
            type: array
        "400":
          description: Invalid parameter format
        "404":
          description: Tenant not found
      security:
      - ApiKeyAuth: []
      summary: Get tenants with optional filters
      tags:
      - Tenants
  /tenants/name/{name}:
    get:
      consumes:
      - application/json
      description: Get a tenant by name
      parameters:
      - description: tenant name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateTenantDTO'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get a tenant by name
      tags:
      - Tenants
  /users:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: user request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create user
      tags:
      - users
  /users/generate_token:
    post:
      consumes:
      - application/json
      description: Get a user by JWT user
      parameters:
      - description: user request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get a user by JWT user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
